CREATE TABLE STOCK_MARKET_SHARES (
ID INT identity(1,1) PRIMARY KEY,
SYMBOL VARCHAR(255) NOT NULL,
UNIT_PRICE DECIMAL(10, 2) NOT NULL
);

INSERT INTO STOCK_MARKET_SHARES (SYMBOL, UNIT_PRICE) VALUES ('AAPL',
150.50);
INSERT INTO STOCK_MARKET_SHARES (SYMBOL, UNIT_PRICE) VALUES ('AMZN',
3450.25);
INSERT INTO STOCK_MARKET_SHARES (SYMBOL, UNIT_PRICE) VALUES ('GOOGL',
2700.75);
INSERT INTO STOCK_MARKET_SHARES (SYMBOL, UNIT_PRICE) VALUES ('TSLA',
780.80);
INSERT INTO STOCK_MARKET_SHARES (SYMBOL, UNIT_PRICE) VALUES ('MSFT',
305.40);

CREATE TABLE ORDERS (
TX_NUMBER INT IDENTITY(1,1) PRIMARY KEY,
ORDER_DATE DATETIME,
ACTION VARCHAR(4) NOT NULL,
STATUS VARCHAR(10) NOT NULL,
SYMBOL VARCHAR(5) NOT NULL,
QUANTITY INT NOT NULL,
PRICE DECIMAL(10,2) NOT NULL
);
ALTER TABLE ORDERS_HISTORY
ADD CONSTRAINT check_types_1
CHECK (ACTION IN ('SELL', 'BUY'));

ALTER TABLE ORDERS_HISTORY
ADD CONSTRAINT check_types_1
CHECK (STATUS IN ('FILLED', 'EXECUTED','CANCELLED', 'PENDING'));

--Deben poder modificar el estado de las ordenes entre FILLED, EXECUTED, CANCELLED o PENDING.(**)

INSERT INTO ORDERS (ORDER_DATE, ACTION, STATUS, SYMBOL, QUANTITY,
PRICE)
VALUES ('2023-08-03 10:15:00', 'BUY', 'PENDING', 'IBM', 150, 120.50);
INSERT INTO ORDERS (ORDER_DATE, ACTION, STATUS, SYMBOL, QUANTITY,
PRICE)
VALUES ('2022-08-03 12:45:00', 'SELL', 'EXECUTED', 'DIA', 30, 275.80);
INSERT INTO ORDERS (ORDER_DATE, ACTION, STATUS, SYMBOL, QUANTITY,
PRICE)
VALUES ('2022-08-04 11:00:00', 'BUY', 'PENDING', 'GLD', 80, 180.40);
INSERT INTO ORDERS (ORDER_DATE, ACTION, STATUS, SYMBOL, QUANTITY,
PRICE)
VALUES ('2022-08-04 13:30:00', 'SELL', 'EXECUTED', 'SPY', 120,
355.20);
INSERT INTO ORDERS (ORDER_DATE, ACTION, STATUS, SYMBOL, QUANTITY,
PRICE)
VALUES ('2021-08-05 10:30:00', 'BUY', 'PENDING', 'AAPL', 60, 155.75);
INSERT INTO ORDERS (ORDER_DATE, ACTION, STATUS, SYMBOL, QUANTITY,
PRICE)
VALUES ('2023-08-05 15:15:00', 'SELL', 'EXECUTED', 'QQQ', 180,
385.10);


CREATE TABLE ORDERS_HISTORY (
TX_NUMBER INT,
ORDER_DATE DATETIME,
ACTION VARCHAR(4) NOT NULL,
STATUS VARCHAR(10) NOT NULL,
SYMBOL VARCHAR(5) NOT NULL,
QUANTITY INT NOT NULL,
PRICE DECIMAL(10,2) NOT NULL,
FOREIGN KEY (TX_NUMBER) REFERENCES ORDERS(TX_NUMBER)

);
    

ALTER TABLE ORDERS_HISTORY
ADD CONSTRAINT check_types_1
CHECK (ACTION IN ('SELL', 'BUY'));

ALTER TABLE ORDERS_HISTORY
ADD CONSTRAINT check_types_1
CHECK (STATUS IN ('FILLED', 'EXECUTED','CANCELLED', 'PENDING'));

-- Eliminar la propiedad IDENTITY de TX_NUMBER

INSERT INTO ORDERS_HISTORY(ORDER_DATE, ACTION, STATUS, SYMBOL, QUANTITY,
PRICE)
VALUES ('2023-08-03 10:15:00', 'BUY', 'PENDING', 'IBM', 150, 120.50);
INSERT INTO ORDERS (ORDER_DATE, ACTION, STATUS, SYMBOL, QUANTITY,
PRICE)
VALUES ('2022-08-03 12:45:00', 'SELL', 'EXECUTED', 'DIA', 30, 275.80);
INSERT INTO ORDERS (ORDER_DATE, ACTION, STATUS, SYMBOL, QUANTITY,
PRICE)
VALUES ('2022-08-04 11:00:00', 'BUY', 'PENDING', 'GLD', 80, 180.40);
INSERT INTO ORDERS (ORDER_DATE, ACTION, STATUS, SYMBOL, QUANTITY,
PRICE)
VALUES ('2022-08-04 13:30:00', 'SELL', 'EXECUTED', 'SPY', 120,
355.20);
INSERT INTO ORDERS (ORDER_DATE, ACTION, STATUS, SYMBOL, QUANTITY,
PRICE)
VALUES ('2021-08-05 10:30:00', 'BUY', 'PENDING', 'AAPL', 60, 155.75);
INSERT INTO ORDERS (ORDER_DATE, ACTION, STATUS, SYMBOL, QUANTITY,
PRICE)
VALUES ('2023-08-05 15:15:00', 'SELL', 'EXECUTED', 'QQQ', 180,
385.10);


delete from ORDERS;
delete from ORDERS_HISTORY;


-- Eliminar la propiedad IDENTITY de TX_NUMBER
ALTER TABLE ORDERS_HISTORY
DROP COLUMN TX_NUMBER;
-- Agregar TX_NUMBER como una columna regular
ALTER TABLE ORDERS_HISTORY
ADD TX_NUMBER INT;
-- Agregar una restricción de clave primaria para TX_NUMBER
ALTER TABLE ORDERS_HISTORY
ADD CONSTRAINT PK_ORDERS_TX_NUMBER PRIMARY KEY (TX_NUMBER);



-- 1 Los fragmentos de código que insertan en orders_history, ahora insertarán en ORDERS. (cambiar el nombre del select?)

-- 2 El campo Price, deberá calcularse como resultado de multiplicar el
-- Quantity que estamos insertando, por el valor del unit Price de la acción
-- relacionada.(*) 

-- 2 insetar orden y que el precio (price) = (quantity)*(unit_price) mientras que(where) symbol == symbol

-- 3 Deben poder modificar el estado de las ordenes entre FILLED, EXECUTED, CANCELLED o PENDING.(**)

-- 3 select de las otrenes (talvez una lista afuera), algun filtro en la api y if para asegurar de los estados de las ordenes

-- 4 Cada vez que se inserte una orden, o se genere una modificación en el estado, debemos generar un registro en orders_history (***)

-- 4 una funcion que ahga eso y fue.

